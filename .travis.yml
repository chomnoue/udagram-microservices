language: node_js
node_js:
  - 14


jobs:
  include:
    - stage: build front end
      before_script:
        - export BUILD_DIR=udagram-frontend
      script: &build_api
        - cd $BUILD_DIR
        - npm install
        - npm run lint
        - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        - export TAG=0.0.$TRAVIS_BUILD_NUMBER
        - docker build -t $DOCKER_USERNAME/$BUILD_DIR:$TAG .
        - docker push $DOCKER_USERNAME/$BUILD_DIR:$TAG
    - stage: build common module
      script:
        - cd udagram-common
        - npm version 0.0.$TRAVIS_BUILD_NUMBER
        - npm install
        - npm run lint
        - npm run build
        - npm publish
    - stage: build users api
      before_script:
        - export BUILD_DIR=udagram-users-api
      script: &build_api
        - cd $BUILD_DIR
        - npm install
        - npm run lint
        - npm run build
        - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        - export TAG=0.0.$TRAVIS_BUILD_NUMBER
        - docker build -t $DOCKER_USERNAME/$BUILD_DIR:$TAG .
        - docker push $DOCKER_USERNAME/$BUILD_DIR:$TAG
    - stage: build feeds api
      before_script:
        - export BUILD_DIR=udagram-feeds-api
      script: *build_api
    - stage: deploy to kubernetes
      sudo: required
      before_install:
        - curl -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl
        - chmod +x kubectl && sudo mv kubectl /usr/local/bin/kubectl
      script:
        - echo "$KUBERNETES_CLUSTER_CERTIFICATE" | base64 --decode > cert.crt
        - sh -x deployment/deploy.sh
      branches:
        only:
          - master
          - develop


    